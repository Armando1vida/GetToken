/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import javax.swing.JTable;
import model.ConstansToken;
import model.DataCompiler;
import model.Serialize;

/**
 *
 * @author ArmandoPC
 */
public final class frmSetupTrans extends javax.swing.JInternalFrame {

    DataCompiler datacompiler;
    String[] s;
    Object[][] dataTable;
    ArrayList<ConstansToken> lista = new ArrayList<>();
    Serialize se;

    /**
     * Creates new form frmSetupTrans
     *
     * @param d
     * @param dataTablew
     */
    public frmSetupTrans(String[] d, Object[][] dataTablew) {
        this.s = d;
        this.dataTable = dataTablew;
        initComponents();
        datacompiler = new DataCompiler();
        this.loadTable(this.s);
        se = new Serialize();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableSetUp = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtnamefile = new javax.swing.JTextField();

        setClosable(true);
        setResizable(true);

        tableSetUp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableSetUp);

        jButton1.setText("Guardar XML");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre archivo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtnamefile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(txtnamefile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (!this.isEmptyTable(tableSetUp) && this.txtnamefile.getText().length() != 0) {
            this.getDataTable(tableSetUp);
            this.datacompiler = new DataCompiler(lista, dataTable);
            se.writeXml(datacompiler, this.txtnamefile.getText());

        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public void im(Object[][] g) {

        for (int i = 0; i < g.length; i++) {

            for (int j = 0; j < g[0].length; j++) {
                System.out.print(g[i][j] + " ");

            }
            System.out.println("");
        }
    }

    public void ih(String[] n) {
        for (int i = 0; i < n.length; i++) {
            System.out.println(n[i]);
        }
    }

    public void loadTable(String[] data) {
        Object[][] h = new Object[data.length - 1][2];
        for (int i = 0; i < h.length; i++) {
            for (int j = 0; j < 2; j++) {
                if (j == 0) {
                    h[i][j] = data[i + 1];
                } else {
                    h[i][j] = null;
                }
            }
        }
        this.tableSetUp.setModel(new javax.swing.table.DefaultTableModel(
                h,
                new String[]{
                    "Simbolos", "Macht"
                }
        ) {
            boolean[] canEdit = new boolean[]{
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        }
        );
    }

    public Boolean isEmptyTable(JTable table) {
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 1; j < table.getColumnCount(); j++) {
                if (table.getValueAt(i, j) == null) {
                    return true;
                }
            }
        }
        return false;
    }

    public Boolean getDataTable(JTable table) {
        for (int i = 0; i < table.getRowCount(); i++) {
            lista.add(new ConstansToken(table.getValueAt(i, 0).toString(), i, table.getValueAt(i, 1).toString()));
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableSetUp;
    private javax.swing.JTextField txtnamefile;
    // End of variables declaration//GEN-END:variables
}
