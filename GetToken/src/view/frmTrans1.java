/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import javax.swing.JDesktopPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ArmandoPC
 */
public class frmTrans1 extends javax.swing.JInternalFrame {

    DefaultTableModel modelTable;
    String[] s;
    Object[][] dataTable;
    JDesktopPane jDes;

    /**
     * Creates new form frmTrans1
     */
    public frmTrans1(JDesktopPane jDesktopPanel) {
        initComponents();
        modelTable = (DefaultTableModel) this.table_trans.getModel();
        jDes = jDesktopPanel;
        dataTable = new Object[][]{
            {"q0", null, null, null},
            {"q1", null, null, null},
            {"q2", "", null, null},
            {"q4", null, null, null}
        };
        s = new String[]{
            "Estados\\Simbolo", "S0", "S1", "Otros"
        };

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_num_estado = new javax.swing.JTextField();
        txt_num_simbolo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_trans = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);

        jLabel2.setText("Numero de estados: ");

        jLabel3.setText("Numero de simbolos: ");

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar xml");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane2.setAutoscrolls(true);

        table_trans.setAutoCreateRowSorter(true);
        table_trans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"q0", null, null, null},
                {"q1", null, null, null},
                {"q2", "", null, null},
                {"q4", null, null, null}
            },
            new String [] {
                "Estados\\Simbolo", "S1", "S2", "Otros"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_trans.setToolTipText("");
        table_trans.setDragEnabled(true);
        table_trans.setUpdateSelectionOnSort(false);
        jScrollPane2.setViewportView(table_trans);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_num_simbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_num_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_num_estado, txt_num_simbolo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_num_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_num_simbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.pretarate()) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!this.isEmptyTable(this.table_trans)) {
            if (this.getDataTable(this.table_trans)) {
                frmSetupTrans obj = new frmSetupTrans(s, dataTable);
                obj.setVisible(true);
                jDes.add(obj);
            }
        }

    }//GEN-LAST:event_jButton2ActionPerformed
    public Boolean pretarate() {
        if (this.txt_num_estado.getText().matches("[1-9][0-9]*") && this.txt_num_simbolo.getText().matches("[1-9][0-9]*")) {
            if (this.txt_num_estado.getText().length() != 0 && this.txt_num_simbolo.getText().length() != 0) {
                this.prTable(Integer.parseInt(this.txt_num_estado.getText()), Integer.parseInt(this.txt_num_simbolo.getText()));
                return true;
            }
        }
        return false;
    }

    public void imprimirTable(JTable table) {
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 1; j < table.getColumnCount(); j++) {
                System.out.print(table.getValueAt(i, j) + " ");
            }
            System.out.println("");
        }
    }

    public Boolean isEmptyTable(JTable table) {
        dataTable = new Object[table.getRowCount()][table.getColumnCount() - 1];
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 1; j < table.getColumnCount(); j++) {
                if (table.getValueAt(i, j) == null) {
                    return true;
                }
            }
        }
        return false;
    }

    public Boolean getDataTable(JTable table) {
        dataTable = new Object[table.getRowCount()][table.getColumnCount() - 1];
        int g = 0;
        for (int i = 0; i < table.getRowCount(); i++) {
            g = 0;
            for (int j = 1; j < table.getColumnCount(); j++) {
                dataTable[i][g] = table.getValueAt(i, j);
                g++;
            }
        }
        return true;
    }

    public void imprimir(Object[][] h) {
        for (int i = 0; i < h.length; i++) {
            for (int j = 0; j < h[0].length; j++) {
                System.out.print(h[i][j] + " ");
            }
            System.out.println("");
        }
    }

//    public void im(Object[][] g) {
//
//        for (int i = 0; i < g.length; i++) {
//
//            for (int j = 0; j < g[0].length; j++) {
//                System.out.print(g[i][j] + " ");
//
//            }
//            System.out.println("");
//        }
//    }
//
//    public void ih(String[] n) {
//        for (int i = 0; i < n.length; i++) {
//            System.out.println(n[i]);
//        }
//    }
    /**
     * Prepara la tabla
     *
     * @param num_estado
     * @param num_simbolo
     */
    public void prTable(int num_estado, int num_simbolo) {
        num_simbolo = num_simbolo + 2;
        Object[][] ob = new Object[num_estado][num_simbolo];
        s = new String[num_simbolo];
        boolean[] canEdit = new boolean[num_simbolo];
        Boolean t = true;
        for (int i = 0; i < num_estado; i++) {
            for (int j = 0; j < num_simbolo; j++) {
                if (t) {
                    if (j == 0) {
                        canEdit[j] = false;
                        s[j] = "Estados\\Simbolo";
                    } else if (j < num_simbolo - 1) {
                        s[j] = "S" + (j - 1);

                        canEdit[j] = true;
                    } else {
                        s[j] = "Otros";
                        canEdit[j] = true;
                    }
                }
                if (j == 0) {
                    ob[i][j] = "q" + i;
                } else {
                    ob[i][j] = null;
                }
            }
            t = false;
        }
        this.table_trans.setModel(new javax.swing.table.DefaultTableModel(
                ob,
                s
        ) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        }
        );
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_trans;
    private javax.swing.JTextField txt_num_estado;
    private javax.swing.JTextField txt_num_simbolo;
    // End of variables declaration//GEN-END:variables
}
