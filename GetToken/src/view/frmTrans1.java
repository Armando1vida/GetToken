/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.io.File;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import model.AutoCompletion;
import model.Compilador;
import model.DataCompiler;
import model.Serialize;
import model.TablaTrans;

/**
 *
 * @author ArmandoPC
 */
public class frmTrans1 extends javax.swing.JInternalFrame {

    DefaultTableModel modelTable;
    String[] s;
    Object[][] dataTable;
    JDesktopPane jDes;
    Serialize se;
    DataCompiler datacompiler;

    /**
     * Creates new form frmTrans1
     */
    public frmTrans1(JDesktopPane jDesktopPanel) {
        initComponents();
        llenarCombobox();
        se = new Serialize();
        datacompiler = new DataCompiler();
        modelTable = (DefaultTableModel) this.table_trans.getModel();
//        this.table_trans.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        this.table_trans.getTableHeader().setReorderingAllowed(false);
        jDes = jDesktopPanel;

        this.cbxeorigen.removeAllItems();
        this.cbxedestino.removeAllItems();
        this.cbxsimbolo.removeAllItems();

        this.cbxeorigen.addItem("q0");
        this.cbxeorigen.addItem("q1");
        this.cbxeorigen.addItem("q2");
        this.cbxeorigen.addItem("q3");
        this.cbxedestino.addItem("q0");
        this.cbxedestino.addItem("q1");
        this.cbxedestino.addItem("q2");
        this.cbxedestino.addItem("q3");
//        this.cbxeorigen.addItem(new Estado("q0", 0));
//        this.cbxeorigen.addItem(new Estado("q1", 1));
//        this.cbxeorigen.addItem(new Estado("q2", 2));
//        this.cbxeorigen.addItem(new Estado("q3", 3));
//        this.cbxedestino.addItem(new Estado("q0", 0));
//        this.cbxedestino.addItem(new Estado("q1", 1));
//        this.cbxedestino.addItem(new Estado("q2", 2));
//        this.cbxedestino.addItem(new Estado("q3", 3));
        this.cbxsimbolo.addItem("S0");
        this.cbxsimbolo.addItem("S1");

        this.dataTable = new Object[][]{
            {"q0", 1000, 1001, 1002},
            {"q1", 1000, 1001, 1002},
            {"q2", 1000, 1001, 1002},
            {"q3", 1000, 1001, 1002}
        };
        s = new String[]{
            "Estados\\Simbolo", "S0", "S1", "Otros"
        };

        AutoCompletion.enable(cbxsimbolo);
        AutoCompletion.enable(cbxedestino);
        AutoCompletion.enable(cbxeorigen);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_num_estado = new javax.swing.JTextField();
        txt_num_simbolo = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_trans = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbxeorigen = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cbxsimbolo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cbxedestino = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        rbbefinal = new javax.swing.JRadioButton();
        cbxFile = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jLabel2.setText("Numero de estados: ");

        jLabel3.setText("Numero de simbolos: ");

        jButton1.setText("Generar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar xml");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane2.setAutoscrolls(true);

        table_trans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"q0", "1000", "1001", "1002"},
                {"q1", "1000", "1001", "1002"},
                {"q2", "1000", "1001", "1002"},
                {"q3", "1000", "1001", "1002"}
            },
            new String [] {
                "Estados\\Simbolo", "S0", "S1", "Otros"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_trans.setToolTipText("");
        table_trans.setUpdateSelectionOnSort(false);
        jScrollPane2.setViewportView(table_trans);
        if (table_trans.getColumnModel().getColumnCount() > 0) {
            table_trans.getColumnModel().getColumn(1).setResizable(false);
            table_trans.getColumnModel().getColumn(2).setResizable(false);
            table_trans.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setText("Estado Origen: ");

        cbxeorigen.setEditable(true);
        cbxeorigen.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxeorigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxeorigenActionPerformed(evt);
            }
        });

        jLabel4.setText("Simbolo:");

        cbxsimbolo.setEditable(true);
        cbxsimbolo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setText("Estado destino:");

        cbxedestino.setEditable(true);
        cbxedestino.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton3.setText("OK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        rbbefinal.setText("Estado Final");

        cbxFile.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton4.setText("Cargar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxeorigen, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxsimbolo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxedestino, 0, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbbefinal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_num_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_num_simbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 183, Short.MAX_VALUE)
                                .addComponent(cbxFile, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txt_num_estado, txt_num_simbolo});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, jLabel3});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbxedestino, cbxeorigen, cbxsimbolo});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_num_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txt_num_simbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(cbxFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(cbxedestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)
                        .addComponent(rbbefinal)
                        .addComponent(jButton4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(cbxsimbolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cbxeorigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbxedestino, cbxeorigen, cbxsimbolo});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (!this.pretarate()) {
            this.msg("Campos incompletos o erróneos.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (!this.isEmptyTable(this.table_trans)) {
            if (this.getDataTable(this.table_trans)) {
                frmSetupTrans obj = new frmSetupTrans(s, dataTable);
                obj.setVisible(true);
                jDes.add(obj);
            }
        } else {
            this.msg("Tabla incompleta");
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbxeorigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxeorigenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxeorigenActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int origen = this.cbxeorigen.getSelectedIndex();
        int simbolo = this.cbxsimbolo.getSelectedIndex();
        int destino = this.cbxedestino.getSelectedIndex();
        if (this.rbbefinal.isSelected()) {
            destino = destino * -1;
        }
        this.table_trans.setValueAt(destino, origen, simbolo + 1);
        this.rbbefinal.setSelected(false);
        this.cbxeorigen.setSelectedIndex(0);
        this.cbxsimbolo.setSelectedIndex(0);
        this.cbxedestino.setSelectedIndex(0);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (this.preparate()) {
            datacompiler = se.ReadXml(cbxFile.getSelectedItem().toString());
            int[][] tableData = this.convert(datacompiler.getTableTans());
            imprimir(datacompiler.getTableTans());
            prTable(tableData.length, tableData[0].length - 1);
            setValueTable(this.table_trans, tableData);

//            String h = this.com.analizadorSintactico(new TablaTrans(this.convert(datacompiler.getTableTans())));
//            this.com.MostarToken();
//            this.txtresult.setText(h);
        } else {
            this.msg("Campos incompletos");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    public Boolean pretarate() {
        if (this.txt_num_estado.getText().matches("[1-9][0-9]*") && this.txt_num_simbolo.getText().matches("[1-9][0-9]*")) {
            if (this.txt_num_estado.getText().length() != 0 && this.txt_num_simbolo.getText().length() != 0) {
                this.prTable(Integer.parseInt(this.txt_num_estado.getText()), Integer.parseInt(this.txt_num_simbolo.getText()));
                return true;
            }
        }
        return false;
    }

    public int[][] convert(Object[][] g) {
        int[][] gf = new int[g.length][g[0].length];
        for (int i = 0; i < g.length; i++) {
            for (int j = 0; j < g[0].length; j++) {
                gf[i][j] = Integer.parseInt(g[i][j] + "");
            }
        }
        return gf;
    }

    public void imprimirTable(JTable table) {
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 1; j < table.getColumnCount(); j++) {
                System.out.print(table.getValueAt(i, j) + " ");
            }
            System.out.println("");
        }
    }

    public void setValueTable(JTable table, int[][] data) {
        for (int i = 0; i < data.length; i++) {
            for (int j = 1; j < data[0].length; j++) {
                table.setValueAt(data[i][j], i, j);
            }
        }
    }

    public Boolean isEmptyTable(JTable table) {
        dataTable = new Object[table.getRowCount()][table.getColumnCount() - 1];
        for (int i = 0; i < table.getRowCount(); i++) {
            for (int j = 1; j < table.getColumnCount(); j++) {
                if (table.getValueAt(i, j) == null || table.getValueAt(i, j).toString().length() == 0) {
                    return true;
                }
            }
        }
        return false;
    }

    public Boolean getDataTable(JTable table) {
        dataTable = new Object[table.getRowCount()][table.getColumnCount() - 1];
        int g = 0;
        for (int i = 0; i < table.getRowCount(); i++) {
            g = 0;
            for (int j = 1; j < table.getColumnCount(); j++) {
                dataTable[i][g] = table.getValueAt(i, j);
                g++;
            }
        }
        return true;
    }

    public void imprimir(Object[][] h) {
        for (int i = 0; i < h.length; i++) {
            for (int j = 0; j < h[0].length; j++) {
                System.out.print(h[i][j] + " ");
            }
            System.out.println("");
        }
    }

    public void llenarCombobox() {
        String to = System.getProperty("user.dir"); // recupero el directorio del proyecto
        String separator = System.getProperty("file.separator"); //recupero el separador ex: Windows= '\' , Linux='/'
        to = to + separator + "src" + separator + "src" + separator; // concateno la ruta destino
        File f = new File(to);
        this.cbxFile.removeAllItems();
        if (f.exists()) { // Directorio existe 
            File[] ficheros = f.listFiles();
            for (int x = 0; x < ficheros.length; x++) {
                this.cbxFile.addItem(ficheros[x].getName());
            }
        } else { //Directorio no existe 

        }
    }

    public Boolean preparate() {
        if (this.cbxFile.getSelectedItem().toString().length() != 0) {
            return true;
        }
        return false;

    }
//    public void im(Object[][] g) {
//
//        for (int i = 0; i < g.length; i++) {
//
//            for (int j = 0; j < g[0].length; j++) {
//                System.out.print(g[i][j] + " ");
//
//            }
//            System.out.println("");
//        }
//    }
//
//    public void ih(String[] n) {
//        for (int i = 0; i < n.length; i++) {
//            System.out.println(n[i]);
//        }
//    }

    /**
     * Prepara la tabla
     *
     * @param num_estado fila
     * @param num_simbolo columna
     */
    public void prTable(int num_estado, int num_simbolo) {
        this.cbxeorigen.setModel(new DefaultComboBoxModel());
        this.cbxedestino.setModel(new DefaultComboBoxModel());
        this.cbxsimbolo.setModel(new DefaultComboBoxModel());
        num_simbolo = num_simbolo + 2;
        Object[][] ob = new Object[num_estado][num_simbolo];
        s = new String[num_simbolo];
        boolean[] canEdit = new boolean[num_simbolo];
        Boolean t = true;
        int h = 1000;

        for (int i = 0; i < num_estado; i++) {
            h = 1000;
            for (int j = 0; j < num_simbolo; j++) {
                if (t) {
                    if (j == 0) {
                        canEdit[j] = false;
                        s[j] = "Estados\\Simbolo";
                    } else if (j < num_simbolo - 1) {
                        s[j] = "S" + (j - 1);
                        this.cbxsimbolo.addItem("S" + (j - 1));

                        canEdit[j] = true;
                    } else {
                        s[j] = "Otros";
                        canEdit[j] = true;
                    }
                }
                if (j == 0) {
                    ob[i][j] = "q" + i;
                    this.cbxeorigen.addItem("q" + i);
                    this.cbxedestino.addItem("q" + i);
                } else {
                    ob[i][j] = h;
                    h++;
                }

            }
            t = false;
        }
        this.table_trans.setModel(new javax.swing.table.DefaultTableModel(
                ob,
                s
        ) {
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        }
        );
        if (num_simbolo > 11) {
            this.table_trans.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        }
        this.table_trans.getTableHeader().setReorderingAllowed(false);
        AutoCompletion.enable(cbxsimbolo);
        AutoCompletion.enable(cbxedestino);
        AutoCompletion.enable(cbxeorigen);

    }

    public void msg(String message) {
        JOptionPane.showMessageDialog(this.getRootPane(), message);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxFile;
    private javax.swing.JComboBox cbxedestino;
    private javax.swing.JComboBox cbxeorigen;
    private javax.swing.JComboBox cbxsimbolo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbbefinal;
    private javax.swing.JTable table_trans;
    private javax.swing.JTextField txt_num_estado;
    private javax.swing.JTextField txt_num_simbolo;
    // End of variables declaration//GEN-END:variables

//    private void imprimir(int[][] tableData) {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }
}
